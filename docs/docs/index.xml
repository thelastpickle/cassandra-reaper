<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on Reaper: Easy Repair Management for Apache Cassandra</title>
    <link>http://cassandra-reaper.io/docs/</link>
    <description>Recent content in Documentation on Reaper: Easy Repair Management for Apache Cassandra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://cassandra-reaper.io/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://cassandra-reaper.io/docs/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://cassandra-reaper.io/docs/api/</guid>
      <description>Rest API Source code for all the REST resources can be found from package io.cassandrareaper.resources.
Login Resource POST /login Expected form parameters:
* username: User to login with as defined in Shiro settings (default user is admin) * password: Password to authenticate with through Shiro (default password of user admin is: admin) * rememberMe: Boolean to have the Web UI remember the username Endpoint for logging in to Reaper Shiro JWT Provider GET /jwt Expected query parameters: None Returns a JWT to use in all REST calls when authentication is turned on in Reaper.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://cassandra-reaper.io/docs/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://cassandra-reaper.io/docs/community/</guid>
      <description>Join the Apache Software Foundation Slack and then reach out on the #cassandra-reaper channel.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://cassandra-reaper.io/docs/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://cassandra-reaper.io/docs/concepts/</guid>
      <description>Core Concepts Segments Reaper splits repair runs in segments. A segment is a subrange of tokens that fits entirely in one of the cluster token ranges. The minimum number of segments for a repair run is the number of token ranges in the cluster. With a 3 nodes cluster using 256 vnodes per node, a repair run will have at least 768 segments. If necessary, each repair can define a higher number of segments than the number of token ranges.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://cassandra-reaper.io/docs/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://cassandra-reaper.io/docs/development/</guid>
      <description>Forward Merging Reaper practices forward merging commits.
Fixes and improvements required to release branches are first committed to those branches. These changes are merged forward onto master afterwards.
An example where a bugfix developed and approved for the release branch 1.4 is to be merged;
# first rebase the work one last time off the latest 1.4 branch git checkout bob/1.4_bugfix git rebase 1.4 git push # switch to the 1.</description>
    </item>
    
  </channel>
</rss>
